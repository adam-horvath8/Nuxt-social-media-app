// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String         @id @default(uuid())
  username        String         @unique
  password        String
  createdAt       DateTime       @default(now())
  profile         Profile?
  posts           Post[]
  subscriptions   Subscription[] @relation("userToSubscriber")
  subscribedTo    Subscription[] @relation("userToSubscribedTo")
  bookmarkedPosts Bookmark[]
}

model Post {
  id        String     @id @default(uuid())
  text      String
  imageSrc  String?
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  user      User       @relation(fields: [userId], references: [id])
  userId    String
  bookmarks Bookmark[]
  replytoId String?
  replyTo   Post?      @relation("replies", fields: [replytoId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  replies   Post[]     @relation("replies")
}

model Profile {
  id          String  @id @default(uuid())
  userId      String  @unique
  name        String?
  surname     String?
  address     String?
  description String?
  profileImg  String? // URL to the profile image
  email       String? @unique
  telNumber   String?
  user        User    @relation(fields: [userId], references: [id])
}

model Subscription {
  id             String   @id @default(uuid())
  subscriberId   String
  subscribedToId String
  createdAt      DateTime @default(now())

  subscriber   User @relation("userToSubscriber", fields: [subscriberId], references: [id])
  subscribedTo User @relation("userToSubscribedTo", fields: [subscribedToId], references: [id])

  @@unique([subscriberId, subscribedToId])
}

model Bookmark {
  id        String   @id @default(uuid())
  userId    String
  postId    String
  createdAt DateTime @default(now())

  user User @relation(fields: [userId], references: [id])
  post Post @relation(fields: [postId], references: [id])
}
